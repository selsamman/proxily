"use strict";(self.webpackChunkproxily_doc=self.webpackChunkproxily_doc||[]).push([[157],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,b=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(b,i(i({ref:t},c),{},{components:n})):r.createElement(b,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2299:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:6,title:"Utility API"},p=void 0,s={unversionedId:"API/utility",id:"API/utility",isDocsHomePage:!1,title:"Utility API",description:"These are features of proxily that are important but less often used",source:"@site/docs/API/utility.md",sourceDirName:"API",slug:"/API/utility",permalink:"/docs/API/utility",editUrl:"https://github.com/selsamman/proxily-doc/edit/master/website/docs/API/utility.md",version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Utility API"},sidebar:"tutorialSidebar",previous:{title:"Tools API",permalink:"/docs/API/tools"}},c=[{value:"nonObservable",id:"nonobservable",children:[]},{value:"ObservableProvider",id:"observableprovider",children:[]},{value:"TransactionProvider",id:"transactionprovider",children:[]},{value:"groupUpdates",id:"groupupdates",children:[]}],u={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"These are features of proxily that are important but less often used"),(0,o.kt)("h2",{id:"nonobservable"},"nonObservable"),(0,o.kt)("p",null,"Sometimes you need for Proxily to leave certain properties alone and not create a proxy for them since they don't directly contain state and may function improperly if a proxy is created for them."),(0,o.kt)("p",null,"Two forms of ",(0,o.kt)("strong",{parentName:"p"},"nonObservable")," are allow for this:"),(0,o.kt)("p",null,"As a decorator proceeding a property"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"@nonObservable()\n")),(0,o.kt)("p",null,"As a function that accepts a class or object, and it's property name(s)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nonObservable (obj : any, propOrProps : string | Array<string>)\n")),(0,o.kt)("p",null,"As a function call to nominate either properties of an object or properties of a class as not being observable"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Item"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"obj"),(0,o.kt)("td",{parentName:"tr",align:null},"An object or a class")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"propsOrProps"),(0,o.kt)("td",{parentName:"tr",align:null},"An array of property names or a single property name")))),(0,o.kt)("p",null,"In both cases the property will not be made observable.  This is important when objects that don't directly represent state are included in an object that will be made observable. "),(0,o.kt)("h2",{id:"observableprovider"},"ObservableProvider"),(0,o.kt)("p",null,"Sometimes you may want to create a new observable object and put it into a context.  This would be useful when iterating in JSX and requiring a new observable object such as a controller on each iteration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"ObservableProvider = ({context, value, dependencies, transaction, children} : {\n    context : any, \n    value : Function | any, \n    dependencies : Array<any>, \n    transaction?: Transaction, \n    children: any})\n")),(0,o.kt)("p",null,"Proxily provides this helper to do it for you."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Options"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"context"),(0,o.kt)("td",{parentName:"tr",align:null},"A context created by React.createContext")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"value"),(0,o.kt)("td",{parentName:"tr",align:null},"A callback function that will return an object to be made observable or the object itself")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"dependencies"),(0,o.kt)("td",{parentName:"tr",align:null},"An array of values that will be use to memoized the create of a new object based when the values change")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"transaction"),(0,o.kt)("td",{parentName:"tr",align:null},"An optional transaction if the observable object is to be part of a transaction")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"children"),(0,o.kt)("td",{parentName:"tr",align:null},"Child components are automatically passed in by using the component in JSX")))),(0,o.kt)("p",null,"In this example you only want to provide a new observable option for each instance of a todoList item"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"<ObservableProvider key={index} context={ListItemContext} dependencies={[item]}\n                    value={() => new ListItemController(listController, item)}>\n    <ListItem key={index}/>\n</ObservableProvider>\n")),(0,o.kt)("p",null,"In the component you reference the observable like this"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    const listItem = useContext(ListItemContext)\n")),(0,o.kt)("p",null,"ListItemContext must be created with React.createContext"),(0,o.kt)("h2",{id:"transactionprovider"},"TransactionProvider"),(0,o.kt)("p",null,"Sometimes you may want to create a new transaction and put it into a context:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"TransactionProvider ({transaction, options, children} :\n{transaction? : Transaction, options? : TransactionOptions, children: any})\n")),(0,o.kt)("p",null,"Proxily provides this helper to do that for you."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"import {TransactionProvider} from 'proxily';\nfunction App () {\n    return (\n        <TransactionProvider>\n            <UpdateCustomer customer={customer} />\n        </TransactionProvider>\n    )\n}\n")),(0,o.kt)("p",null,"Then reference the transaction with useContext rather than creating it in the component"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import {TransactionContext} from 'proxily';\n...\nconst updateAddressTxn = useContext(TransactionContext);\n")),(0,o.kt)("p",null,"You don't need to create the context as it can be imported from proxily"),(0,o.kt)("h2",{id:"groupupdates"},"groupUpdates"),(0,o.kt)("p",null,"Reactions to updates are normally batched such that they occur once per high-level function call.  In async functions this is not the case and so you can force the reactions to be batched by placing them in a ",(0,o.kt)("strong",{parentName:"p"},"groupUptates")," callback"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"groupUpdates = (callback : Function))\n")),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"async doSomething () {\n    this.prop1 = 100;\n    await (new Promise((res : any) =>setTimeout(()=>res(), 1000)));\n    groupUpdates( () => {\n        this.prop2 = 200;\n        this.prop3 = 300;\n    })\n}\n")))}d.isMDXComponent=!0}}]);