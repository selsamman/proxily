"use strict";(self.webpackChunkproxily_doc=self.webpackChunkproxily_doc||[]).push([[93],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4680:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return m}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={title:"Memoization",sidebar_position:1},c=void 0,u={unversionedId:"Features/memoization",id:"Features/memoization",isDocsHomePage:!1,title:"Memoization",description:"Memoization reduces costly recalculations of computed values based on your state by saving the result and only re-running the calculation when dependent state is changed.  Both getters (akin to selectors) and functions with arguments are supported:  You need only annotate an object function with memoizeObject and memoizeClass.",source:"@site/docs/Features/memoization.md",sourceDirName:"Features",slug:"/Features/memoization",permalink:"/proxily/docs/Features/memoization",editUrl:"https://github.com/selsamman/proxily-doc/edit/master/website/docs/Features/memoization.md",version:"current",sidebarPosition:1,frontMatter:{title:"Memoization",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"How it Works",permalink:"/proxily/docs/Introduction/how"},next:{title:"Action Helpers",permalink:"/proxily/docs/Features/default_actions"}},l=[],p={toc:l};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Memoization reduces costly recalculations of computed values based on your state by saving the result and only re-running the calculation when dependent state is changed.  Both getters (akin to selectors) and functions with arguments are supported:  You need only annotate an object function with ",(0,a.kt)("strong",{parentName:"p"},"memoizeObject")," and ",(0,a.kt)("strong",{parentName:"p"},"memoizeClass"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const state = {\n    counters: [counter1, counter2],\n    sortedCounters: function () {\n        return this.counters.slice(0).sort((a,b) => a.value - b.value);\n    }\n};\nmemoize(state, 'sortedCounters'); \n")),(0,a.kt)("p",null,"or to memoize a method within a class:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"class State {\n    constructor () {\n        this.counters = [new CounterClass(), new CounterClass()];\n    }\n    counters : Array<CounterClass> = [];\n    sortedCounters () {\n        return this.counters.slice(0).sort((a,b) => a.value - b.value);\n    }\n};\nmemoize(State, 'sortedCounters');\n")),(0,a.kt)("p",null,'or with Typescript decorators (with "experimentalDecorators": true in your tsconfig file)'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"class State {\n    constructor () {\n        this.counters = [new CounterClass(), new CounterClass()];\n    }\n    counters : Array<CounterClass> = [];\n    \n    @memoize()\n    sortedCounters () {\n        return this.counters.slice(0).sort((a,b) => a.value - b.value);\n    }\n};\n")))}m.isMDXComponent=!0}}]);