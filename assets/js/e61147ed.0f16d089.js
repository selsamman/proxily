"use strict";(self.webpackChunkproxily_doc=self.webpackChunkproxily_doc||[]).push([[394],{3905:function(e,t,o){o.d(t,{Zo:function(){return p},kt:function(){return m}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function l(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?l(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)o=l[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)o=l[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(o),m=r,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return o?n.createElement(g,a(a({ref:t},p),{},{components:o})):n.createElement(g,a({ref:t},p))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=o.length,a=new Array(l);a[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var c=2;c<l;c++)a[c]=o[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},3280:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var n=o(7462),r=o(3366),l=(o(7294),o(3905)),a=["components"],i={sidebar_position:5,title:"Tools API"},s=void 0,c={unversionedId:"API/tools",id:"API/tools",isDocsHomePage:!1,title:"Tools API",description:"configureReduxDevTools",source:"@site/docs/API/tools.md",sourceDirName:"API",slug:"/API/tools",permalink:"/docs/API/tools",editUrl:"https://github.com/selsamman/proxily-doc/edit/master/website/docs/API/tools.md",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Tools API"},sidebar:"tutorialSidebar",previous:{title:"Transaction API",permalink:"/docs/API/transactions"},next:{title:"Utility API",permalink:"/docs/API/utility"}},p=[{value:"configureReduxDevTools",id:"configurereduxdevtools",children:[]},{value:"initReduxDevTools",id:"initreduxdevtools",children:[]},{value:"setLogLevel",id:"setloglevel",children:[]},{value:"setLog",id:"setlog",children:[]},{value:"resetLogging",id:"resetlogging",children:[]}],u={toc:p};function d(e){var t=e.components,o=(0,r.Z)(e,a);return(0,l.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"configurereduxdevtools"},"configureReduxDevTools"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"}," configureReduxDevTools(options? : any)\n")),(0,l.kt)("p",null,"Configures redux devtools.  Note we don't recommend enabling dev tools in production because of memory consumption and the cost of creating a separate copy of state on each action.  The options are described in the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Arguments.md"},"devtools documentation"),".  Of these options only the following should be used:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"name")," in case you have multiple instances you wish to identify separately"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"latency")," to avoid storing a state when actions are fired at close time intervals"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"maxAge")," to set the maximum number actions stored"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"features")," - to set particular features")),(0,l.kt)("p",null,"This must be called prior to creating observable options"),(0,l.kt)("h2",{id:"initreduxdevtools"},"initReduxDevTools"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"initReduxDevTools()\n")),(0,l.kt)("p",null,"Called to set the @@INIT state.  Normally would be called after setting up an initial state or after the call to persist"),(0,l.kt)("h2",{id:"setloglevel"},"setLogLevel"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"interface LogLevels {\n    propertyChange : boolean\n    render: boolean;\n    propertyTracking : boolean\n}\n\nsetLogLevel(levels : Partial<LogLevels>)\n")),(0,l.kt)("p",null,"Sets the logging level globally for the application:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"render")," logs the rendering of each functional component along with the number of renders thus far.  Note that with ",(0,l.kt)("strong",{parentName:"p"},"React.StrictMode"),", now enabled by default in ",(0,l.kt)("strong",{parentName:"p"},"Create React App"),", you will see the render number go up in increments of two because an extra render occurs in development mode to weed out side effects. '''ListItem render (2)'''")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"propertyTracking")," logs each property that a component renders react-start ",(0,l.kt)("inlineCode",{parentName:"p"},"\nListItem Observer tracking ListController.selectedItem, StyleController.todoListStyle, TodoListStyle.listFontColor, TodoListStyle.fontSize, ToDoListItem.title, ToDoListItem.completed"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"propertyChange")," logs each time a property is mutated '''ToDoListItem.title = Hi'''"))),(0,l.kt)("p",null,"Note that the class name (e.g. ",(0,l.kt)("strong",{parentName:"p"},"TodoListItem"),") is only logged when you use classes.  Otherwise it would show as ",(0,l.kt)("inlineCode",{parentName:"p"},"Object.title = Hi")),(0,l.kt)("h2",{id:"setlog"},"setLog"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"setLog(logFN : (data : string) => void)\n")),(0,l.kt)("p",null,"Sets the logging function that will actually do the logging to one you provide.  This allows output to go to other locations.  You can also filter log entries.  For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"setLog((l) => {\n    if (l.match(/TodoListItem/))\n        console.log(l);\n});\n")),(0,l.kt)("h2",{id:"resetlogging"},"resetLogging"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"function resetLogging()\n")),(0,l.kt)("p",null,"Resets the log levels and the logging function"))}d.isMDXComponent=!0}}]);